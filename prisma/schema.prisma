// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // Enable Prisma Accelerate
  directUrl = env("DIRECT_URL")
}

model Site {
  id               String        @id @default(cuid())
  name             String
  url              String
  status           String        @default("checking")
  successfulChecks Int           @default(0)
  totalChecks      Int           @default(0)
  responseTime     Int           @default(0)
  userId           String
  user             User          @relation(fields: [userId], references: [id])
  checks           StatusCheck[] // This line must exist
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}

model StatusCheck {
  id           String   @id @default(cuid())
  siteId       String
  status       String
  responseTime Int
  timestamp    DateTime @default(now())
  statusCode   Int?
  headers      Json?
  sslInfo      Json?
  dnsInfo      Json?
  error        String?
  site         Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)

  @@index([siteId])
  @@index([timestamp])
}

model User {
  id                 String    @id @default(cuid())
  name               String?
  email              String?   @unique
  password           String?
  emailVerified      DateTime?
  verificationToken  String?   @unique
  verificationExpiry DateTime?
  sites              Site[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
